from z3 import *

LEN = 54
f = [BitVec('f[%d]' % i, 16) for i in range(LEN)]
s = Solver()

s.add( ((8 * (f[0] ^ 0x12) + 40) | (((f[0] ^ 0x12) + 5) >> 5)) == 0x262 )
s.add( ((8 * (f[1] ^ 0x23) + 56) | (((f[1] ^ 0x23) + 7) >> 5)) == 0x33B )
s.add( ((8 * (f[2] ^ 0x34) + 24) | (((f[2] ^ 0x34) + 3) >> 5)) == 0x31B )
s.add( ((8 * (f[3] ^ 0x45) + 16) | (((f[3] ^ 0x45) + 2) >> 5)) == 0x28 )
s.add( ((8 * (f[4] ^ 0x56) + 72) | (((f[4] ^ 0x56) + 9) >> 5)) == 0x1B1 )
s.add( ((8 * (f[5] ^ 0x67) + 32) | (((f[5] ^ 0x67) + 4) >> 5)) == 0x1D9 )
s.add( ((8 * (f[6] ^ 0x78) + 48) | (((f[6] ^ 0x78) + 6) >> 5)) == 0xF8 )
s.add( ((8 * (f[7] ^ 0x89) + 8) | (((f[7] ^ 0x89) + 1) >> 5)) == 0x5ED )
s.add( ((8 * (f[8] ^ 0x9A) + 24) | (((f[8] ^ 0x9A) + 3) >> 5)) == 0x58D )
s.add( ((8 * (f[9] ^ 0xAB) + 40) | (((f[9] ^ 0xAB) + 5) >> 5)) == 0x6F6 )
s.add( ((8 * (f[10] ^ 0xBC) + 16) | (((f[10] ^ 0xBC) + 2) >> 5)) == 0x6EE )
s.add( ((8 * (f[11] ^ 0xCD) + 56) | (((f[11] ^ 0xCD) + 7) >> 5)) == 0x585 )
s.add( ((8 * (f[12] ^ 0xDE) + 32) | (((f[12] ^ 0xDE) + 4) >> 5)) == 0x61E )
s.add( ((8 * (f[13] ^ 0xEF) + 24) | (((f[13] ^ 0xEF) + 3) >> 5)) == 0x6FE )
s.add( ((8 * (f[14] ^ 0xF0) + 40) | (((f[14] ^ 0xF0) + 5) >> 5)) == 0x5A5 )
s.add( ((8 * (f[15] ^ 1) + 16) | (((f[15] ^ 1) + 2) >> 5)) == 0x2AA )
s.add( ((8 * (f[16] ^ 0x12) + 72) | (((f[16] ^ 0x12) + 9) >> 5)) == 0x151 )
s.add( ((8 * (f[17] ^ 0x23) + 32) | (((f[17] ^ 0x23) + 4) >> 5)) == 0x2CA )
s.add( ((8 * (f[18] ^ 0x34) + 48) | (((f[18] ^ 0x34) + 6) >> 5)) == 0x2BA )
s.add( ((8 * (f[19] ^ 0x45) + 8) | (((f[19] ^ 0x45) + 1) >> 5)) == 0x1C1 )
s.add( ((8 * (f[20] ^ 0x56) + 24) | (((f[20] ^ 0x56) + 3) >> 5)) == 0x141 )
s.add( ((8 * (f[21] ^ 0x67) + 40) | (((f[21] ^ 0x67) + 5) >> 5)) == 0x2CA )
s.add( ((8 * (f[22] ^ 0x78) + 16) | (((f[22] ^ 0x78) + 2) >> 5)) == 0x149 )
s.add( ((8 * (f[23] ^ 0x89) + 56) | (((f[23] ^ 0x89) + 7) >> 5)) == 0x61E )
s.add( ((8 * (f[24] ^ 0x9A) + 32) | (((f[24] ^ 0x9A) + 4) >> 5)) == 0x73F )
s.add( ((8 * (f[25] ^ 0xAB) + 48) | (((f[25] ^ 0xAB) + 6) >> 5)) == 0x666 )
s.add( ((8 * (f[26] ^ 0xBC) + 8) | (((f[26] ^ 0xBC) + 1) >> 5)) == 0x6FE )
s.add( ((8 * (f[27] ^ 0xCD) + 24) | (((f[27] ^ 0xCD) + 3) >> 5)) == 0x52D )
s.add( ((8 * (f[28] ^ 0xDE) + 40) | (((f[28] ^ 0xDE) + 5) >> 5)) == 0x5BD )
s.add( ((8 * (f[29] ^ 0xEF) + 16) | (((f[29] ^ 0xEF) + 2) >> 5)) == 0x444 )
s.add( ((8 * (f[30] ^ 0xF0) + 56) | (((f[30] ^ 0xF0) + 7) >> 5)) == 0x4D4 )
s.add( ((8 * (f[31] ^ 1) + 32) | (((f[31] ^ 1) + 4) >> 5)) == 0x313 )
s.add( ((8 * (f[32] ^ 0x12) + 48) | (((f[32] ^ 0x12) + 6) >> 5)) == 0x2EA )
s.add( ((8 * (f[33] ^ 0x23) + 8) | (((f[33] ^ 0x23) + 1) >> 5)) == 0x2E2 )
s.add( ((8 * (f[34] ^ 0x34) + 24) | (((f[34] ^ 0x34) + 3) >> 5)) == 0x2A2 )
s.add( ((8 * (f[35] ^ 0x45) + 40) | (((f[35] ^ 0x45) + 5) >> 5)) == 0x58 )
s.add( ((8 * (f[36] ^ 0x56) + 16) | (((f[36] ^ 0x56) + 2) >> 5)) == 0x129 )
s.add( ((8 * (f[37] ^ 0x67) + 56) | (((f[37] ^ 0x67) + 7) >> 5)) == 0xD0 )
s.add( ((8 * (f[38] ^ 0x78) + 32) | (((f[38] ^ 0x78) + 4) >> 5)) == 0xA8 )
s.add( ((8 * (f[39] ^ 0x89) + 48) | (((f[39] ^ 0x89) + 6) >> 5)) == 0x767 )
s.add( ((8 * (f[40] ^ 0x9A) + 24) | (((f[40] ^ 0x9A) + 3) >> 5)) == 0x7BF )
s.add( ((8 * (f[41] ^ 0xAB) + 40) | (((f[41] ^ 0xAB) + 5) >> 5)) == 0x7CF )
s.add( ((8 * (f[42] ^ 0xBC) + 16) | (((f[42] ^ 0xBC) + 2) >> 5)) == 0x777 )
s.add( ((8 * (f[43] ^ 0xCD) + 56) | (((f[43] ^ 0xCD) + 7) >> 5)) == 0x828 )
s.add( ((8 * (f[44] ^ 0xDE) + 32) | (((f[44] ^ 0xDE) + 4) >> 5)) == 0x56D )
s.add( ((8 * (f[45] ^ 0xEF) + 48) | (((f[45] ^ 0xEF) + 6) >> 5)) == 0x484 )
s.add( ((8 * (f[46] ^ 0xF0) + 8) | (((f[46] ^ 0xF0) + 1) >> 5)) == 0x41C )
s.add( ((8 * (f[47] ^ 1) + 24) | (((f[47] ^ 1) + 3) >> 5)) == 0x30B )
s.add( ((8 * (f[48] ^ 0x12) + 40) | (((f[48] ^ 0x12) + 5) >> 5)) == 0x129 )
s.add( ((8 * (f[49] ^ 0x23) + 16) | (((f[49] ^ 0x23) + 2) >> 5)) == 0xA8 )
s.add( ((8 * (f[50] ^ 0x34) + 56) | (((f[50] ^ 0x34) + 7) >> 5)) == 0x68 )
s.add( ((8 * (f[51] ^ 3) + 40) | (((f[51] ^ 3) + 5) >> 5)) == 0x1E1 )
s.add( ((8 * (f[52] ^ 0xBE) + 24) | (((f[52] ^ 0xBE) + 3) >> 5)) == 0x515 )
s.add( ((8 * (f[53] ^ 0xFE) + 48) | (((f[53] ^ 0xFE) + 6) >> 5)) == 0x44C )

if s.check() == sat:
	m = s.model()
	print(''.join([chr(m[f[i]].as_long()) for i in range(LEN)]))

# UCTF{Pa54rgda3_R3vers3_5ymbolic_ExeCution_P0wer_2024!}
